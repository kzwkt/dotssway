# Begs's config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# default: set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu wofi
# Screen locker
set $locker 'swaylock --font FiraCode -e -f -i ~/wallpaper/voidyuri.png'
# Lock and disable screen on shortcut
bindsym $mod+Insert exec $locker
### Output configuration
#
# Wallpaper (you may change it to yout liking)
#output * bg ~/wallpaper/voidyuri.png fill
output * bg ~/wallpaper/nordmountain.jpg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
#
exec swayidle -w \
         timeout 600 $locker \
         timeout 900 'swaymsg "output * dpms off"' \
              resume 'swaymsg "output * dpms on"' \
         before-sleep $locker
# This will lock your screen after 600 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input type:pointer {
    accel_profile flat
    #pointer_accel -1
}

input type:tablet_tool {
    left_handed 1
    map_from_region 0.00001x59.2mm 56.17x92mm
    #yes, it isn't possible to just write '0' here((
}

input type:keyboard {
    xkb_layout us,ru
    xkb_options grp:alt_shift_toggle
}

input type:touchpad {
    accel_profile flat
    tap enabled
    tap_button_map lrm
}

# Apperance:
gaps inner 10
gaps outer -2
smart_gaps on
smart_borders on
default_border none
default_floating_border none

### Key bindings
#
# Basics:
#
    # Brightess control
    bindsym XF86MonBrightnessDown exec light -U 5
    bindsym XF86MonBrightnessUp exec light -A 5

    # Volume control
    bindsym XF86AudioRaiseVolume exec amixer set Master 1%+ && pkill -x -RTMIN+11 waybar
    bindsym XF86AudioLowerVolume exec amixer set Master 1%- && pkill -x -RTMIN+11 waybar
    bindsym XF86AudioMute exec amixer set Master toggle
    #bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
    
    # Make a screenshot & copy to clipboard (of a selectable area via Shift+Print)
    bindsym Print exec grim - | wl-copy --type image/png
    bindsym Shift+Print exec grim -g "$(slurp)" - | wl-copy --type image/png
    # Make a screenshot & save as png file
    bindsym $mod+Print exec grim ~/screenshots/$(date +'%s_grim.png')
    bindsym $mod+Shift+Print exec grim -g "$(slurp)" ~/screenshots/$(date +'%s_grim.png')
    
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym --to-code $mod+Shift+q kill

    # Start your launcher
    bindsym --to-code $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym --to-code $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym --to-code $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym --to-code $mod+$left focus left
    bindsym --to-code $mod+$down focus down
    bindsym --to-code $mod+$up focus up
    bindsym --to-code $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym --to-code $mod+Shift+$left move left
    bindsym --to-code $mod+Shift+$down move down
    bindsym --to-code $mod+Shift+$up move up
    bindsym --to-code $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9
    bindsym $mod+Shift+0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym --to-code $mod+b splith
    bindsym --to-code $mod+v splitv

    # Switch the current container between different layout styles
    bindsym --to-code $mod+s layout stacking
    bindsym --to-code $mod+w layout tabbed
    bindsym --to-code $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym --to-code $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym --to-code $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Start waybar
exec waybar

# Start a simple notification daemon (unneeded cause it starts automatically)
#exec mako
#exec dbus-daemon --session --address=unix:path=$XDG_RUNTIME_DIR/bus

# Fix cursor size and theme in native wayland applications (fixes a very strange bug for me, you may want to comment it out
seat seat0 xcursor_theme Adwaita 24

# Gtk theme for wayland applications workaround
exec_always {
    gsettings set org.gnome.desktop.interface gtk-theme 'Nordic'
    gsettings set org.gnome.desktop.interface icon-theme 'Arc'
    #gsettings set org.gnome.desktop.interface document-font-name 'Fira Sans 10'
    gsettings set org.gnome.desktop.interface font-name 'Fira Sans 10'
    gsettings set org.gnome.desktop.interface monospace-font-name 'FiraCode 10'
    #gsettings set $gnome-schema cursor-theme 'Your cursor Theme'
}

# Run pure wayland session
# xwayland disable

include @sysconfdir@/sway/config.d/*
